Parameters:
  TaskName:
    Type: String
    Default: tuf-repo-canary
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
  VPCSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref VPC
  VPCInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref VPCInternetGateway
  VPCRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  ExternalRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCInternetGateway
      RouteTableId: !Ref VPCRouteTable
  SubnetRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref VPCRouteTable
      SubnetId: !Ref VPCSubnet
  VPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'Allow traffic to ${TaskName}'
      VpcId: !Ref VPC
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${TaskName}'
      RetentionInDays: 30
  FailedStartLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/events/${TaskName}-start-failures'
  RepoValidationFailureLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: '/aws/events/tuf-repo-validation-failures'
  TUFRepoCanarySNSNotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: TUF Repo Canary Notifications
  TUFRepoCanarySNSSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: etung@amazon.com
      Protocol: email
      TopicArn: !Ref TUFRepoCanarySNSNotificationTopic
  TUFRepoCanaryImgRepo:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: !Sub '${TaskName}'
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties: {}
  TUFRepoCanaryTask:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      TaskRoleArn: !GetAtt TUFRepoCanaryTaskExecutionRole.Arn
      ExecutionRoleArn: !GetAtt TUFRepoCanaryTaskExecutionRole.Arn
      Family: !Sub '${TaskName}'
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Memory: 512
          Cpu: 256
          Image: !Join
            - /
            - - !Join
                - .
                - - !Ref 'AWS::AccountId'
                  - dkr.ecr
                  - !Ref 'AWS::Region'
                  - amazonaws.com
              - !Sub '${TaskName}:latest'
          Name: !Sub '${TaskName}'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: 'ecs'
  TUFRepoCanaryTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: TUFRepoCanaryTaskExecutionRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AmazonECSTaskExecutionPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogStreams'
                  - 'logs:GetLogEvents'
                  - 'cloudwatch:PutMetricData'
                Resource: '*'
  TUFRepoCanaryTaskEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: TUFRepoCanaryTaskEventRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AmazonEC2ContainerServiceEventsRole
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ecs:RunTask'
                  - 'iam:PassRole'
                Resource: '*'
  TUFRepoCanaryFailedInvocationAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF Repo Canary Invocation Failure
      AlarmDescription: 'TUF Repo Canary task could not be invoked'
      Namespace: AWS/Events
      MetricName: FailedInvocations
      Dimensions:
        - Name: RuleName
          Value: !Ref TUFRepoCanaryScheduledTask
      Period: 600
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 4
      DatapointsToAlarm: 3
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic
  TUFRepoCanaryScheduledTask:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: !Sub 'Schedules ${TaskName} task to run every 10 minutes'
      ScheduleExpression: cron(0/10 * * * ? *)
      State: ENABLED
      Targets:
        - Id: !Sub '${TaskName}-Fargate-Task'
          RoleArn: !GetAtt TUFRepoCanaryTaskEventRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref TUFRepoCanaryTask
            TaskCount: 1
            LaunchType: FARGATE
            PlatformVersion: LATEST
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - !Ref VPCSecurityGroup
                Subnets:
                  - !Ref VPCSubnet
          Arn: !GetAtt ECSCluster.Arn
  TUFRepoCanaryFailedAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF Repo Validation Failure
      AlarmDescription: 'TUF Repo Canary task exited non-zero (indicating TUF Repo validation failure)'
      Namespace: AWS/Events
      MetricName: TriggeredRules
      Dimensions:
        - Name: RuleName
          Value: !Ref TUFRepoCanaryFailedRule
      Period: 600
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 4
      DatapointsToAlarm: 3
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic
  TUFRepoCanaryFailedRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'TUF repository validation failure'
      Name: 'repo-canary-nonzero-exit-code'
      EventPattern: !Sub '{"source": ["aws.ecs"],"detail-type": ["ECS Task State Change"],"detail": {"containers": {"name": ["${TaskName}"],"exitCode":[1,64,65,66,67,68,69,70,71,72,73],"lastStatus": ["STOPPED"]}}}'
      Targets:
        - Arn: !Join
            - ":"
            - - "arn:aws:logs"
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - 'log-group'
              - !Ref RepoValidationFailureLogGroup
          Id: 'tuf-repo-validation-failure'
  TUFRepoCanaryFailedStartAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF Repo Canary Task Start Failure
      AlarmDescription: 'TUF Repo Canary task failed to start'
      Namespace: AWS/Events
      MetricName: TriggeredRules
      Dimensions:
        - Name: RuleName
          Value: !Ref TUFRepoCanaryFailedStartRule
      Period: 600
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 4
      DatapointsToAlarm: 3
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic
  TUFRepoCanaryFailedStartRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'TUF Repo Canary fail to start'
      Name: 'repo-canary-failed-to-start'
      EventPattern: !Sub '{"source": ["aws.ecs"],"detail-type": ["ECS Task State Change"],"detail": {"containers": {"name": ["${TaskName}"],"lastStatus": ["STOPPED"]},"stoppedReason":["Task failed to start"]}}'
      Targets:
        - Arn: !Join
            - ":"
            - - "arn:aws:logs"
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - 'log-group'
              - !Ref FailedStartLogGroup
          Id: !Sub '${TaskName}-failed-start'
