# stack: thar-pr-build

Parameters:
  BuildSpecPath:
    Type: String
    AllowedPattern: '.+\.yml$'
    Default: "./tools/infra/buildspec/thar-pr-build.yml"
    Description: >-
      The path to the buildspec.yml file to use.
  SourceGitHubRepositoryURL:
    Type: String
    Default: "https://github.com/amazonlinux/PRIVATE-thar.git"
    AllowedPattern: 'https://github.com/.+/.+\.git$'
    ConstraintDescription: "Source URL must be a GitHub repository (with its .git suffix)"
    Description: >-
      The GitHub repository that builds run for. Your account must be authorized
      to modify this repository's settings.
  EnvironmentImageName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /infra/container/infra/builder
    Description: >-
      Parameter that defines the image name the builder uses as its execution
      environment *without* a tag (eg: registry/image-name, not
      registry/image-name:tag). The EnvironmentImageTag Parameter provides the
      appropriate tag separately.
  EnvironmentImageTag:
    Type: String
    Default: latest
    Description: >-
      The image 'tag' (as in registry/image-name:tag) to select of the EnvironmentImage
      provided.
  ImageCredentialsType:
    Type: String
    Default: CODEBUILD
    AllowedValues: [ CODEBUILD, SERVICE_ROLE ]
    Description: >-
      If image policy does not trust codebuild.amazonaws.com OR cross-account
      role is needed, then the SERVICE_ROLE must be specified to use the role
      assigned to the build project.

Resources:
  BuildArtifactBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  BuildLogBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  BuildLogGroup:
    Type: AWS::Logs::LogGroup

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com

  BuildRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref BuildRole
      PolicyName: BuildRolePolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # For managing cache, logs, and artifacts in the build's buckets.
          - Sid: "manageBuildArtifacts"
            Effect: Allow
            Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutObject*
              - s3:Abort*
            Resource:
              - !GetAtt BuildArtifactBucket.Arn
              - !Sub "${BuildArtifactBucket.Arn}/*"
              - !GetAtt BuildLogBucket.Arn
              - !Sub "${BuildLogBucket.Arn}/*"
          # For writing to CloudWatch Logs Streams for each build.
          - Sid: "manageBuildLogs"
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !GetAtt BuildLogGroup.Arn

  TharPRBuild:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - BuildArtifactBucket
      - BuildLogBucket
      - BuildLogGroup
      - BuildRole
    Properties:
      Artifacts:
        Location: !Ref BuildArtifactBucket
        Name: /
        NamespaceType: BUILD_ID
        Packaging: NONE
        Path: artifact/
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        Image: !Sub "${EnvironmentImageName}:${EnvironmentImageTag}"
        ImagePullCredentialsType: !Ref ImageCredentialsType
      ServiceRole: !GetAtt BuildRole.Arn
      Source:
        BuildSpec: !Ref BuildSpecPath
        Location: !Ref SourceGitHubRepositoryURL
        ReportBuildStatus: true
        Type: GITHUB
      LogsConfig:
        S3Logs:
          Status: ENABLED
          Location: !Sub "${BuildLogBucket.Arn}/codebuild/log"
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref BuildLogGroup
      TimeoutInMinutes: 180
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PULL_REQUEST_CREATED,PULL_REQUEST_UPDATED

Outputs:
  ArtifactBucket:
    Value: !Ref BuildArtifactBucket
  LogBucket:
    Value: !Ref BuildLogBucket
  Project:
    Value: !Ref TharPRBuild
