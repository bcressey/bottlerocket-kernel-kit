Parameters:
  CanaryInfraStack:
    Type: String
    Description: 'Enter the name of the canary infrastructure stack that sets up the VPC and ECS cluster.'
  TaskName:
    Type: String
    Default: repo-canary
    Description: 'Enter the name of the canary container image.'
  SNSSubscriptionEndpoint:
    Type: String
    Description: 'Enter the SNS subscription endpoint for CloudWatch alarms.'
  SNSSubscriptionProtocol:
    Type: String
    Default: email
    Description: 'Enter the SNS subscription endpoint protocol. Default is email.'
  RepoMetadataBaseUrl:
    Type: String
    Description: 'Enter the metadata base url that specifies the TUF repository metadata files source.'
  RepoTargetBaseUrl:
    Type: String
    Description: 'Enter the target base url that specifies where the listed targets in the TUF repository can be retrieved.'
Resources:
  VPCRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-VpcId"
  ExternalRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-VpcInternetGatewayId"
      RouteTableId: !Ref VPCRouteTable
  VPCSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-VpcId"
  SubnetRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref VPCRouteTable
      SubnetId: !Ref VPCSubnet
  VPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'Allow traffic to ${TaskName}'
      VpcId:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-VpcId"
  CheckUpcomingExpirationLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${TaskName}-check-upcoming-expiration'
      RetentionInDays: 30
  RetrieveTargetsLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/${TaskName}-retrieve-targets'
      RetentionInDays: 30
  FailedStartLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/events/${TaskName}-start-failures'
  FoundUpcomingExpirationLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/events/${TaskName}-found-upcoming-expiration'
  RepoValidationFailureLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/aws/events/${TaskName}-validation-failures'
  TUFRepoCanarySNSNotificationTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: TUF Repo Canary Notifications
  TUFRepoCanarySNSSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Sub '${SNSSubscriptionEndpoint}'
      Protocol: !Sub '${SNSSubscriptionProtocol}'
      TopicArn: !Ref TUFRepoCanarySNSNotificationTopic
  TUFRepoCanaryImgRepo:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: !Sub '${TaskName}'

  CheckUpcomingExpirationTask:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      TaskRoleArn:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-CanaryTaskExecutionRoleArn"
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-CanaryTaskExecutionRoleArn"
      Family: !Sub '${TaskName}-check-upcoming-expiration'
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: !Sub '${TaskName}-check-upcoming-expiration'
          Command:
            - '--metadata-base-url'
            - !Sub '${RepoMetadataBaseUrl}'
            - '--target-base-url'
            - !Sub '${RepoTargetBaseUrl}'
            - '--trusted-root-path'
            - '/usr/share/repo-canary/root.json'
            - '--check-upcoming-expiration-days'
            - '3'
            - '--percentage-targets-to-retrieve'
            - '0'
          Memory: 512
          Cpu: 256
          Image: !Join
            - /
            - - !Join
                - .
                - - !Ref 'AWS::AccountId'
                  - dkr.ecr
                  - !Ref 'AWS::Region'
                  - amazonaws.com
              - !Sub '${TaskName}:latest'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CheckUpcomingExpirationLogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: 'ecs'
  CheckUpcomingExpirationScheduledTask:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: !Sub 'Schedules ${TaskName}-check-upcoming-expiration task to run every 20 minutes starting at minute 0 of the hour'
      ScheduleExpression: cron(0/20 * * * ? *)
      State: ENABLED
      Targets:
        - Id: !Sub '${TaskName}-check-upcoming-expiration-Fargate-Task'
          RoleArn:
            Fn::ImportValue:
              !Sub "${CanaryInfraStack}-CanaryTaskEventRoleArn"
          EcsParameters:
            TaskDefinitionArn: !Ref CheckUpcomingExpirationTask
            TaskCount: 1
            LaunchType: FARGATE
            PlatformVersion: LATEST
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - !Ref VPCSecurityGroup
                Subnets:
                  - !Ref VPCSubnet
          Arn:
            Fn::ImportValue:
              !Sub "${CanaryInfraStack}-ECSClusterArn"
  CheckExpirationFailedInvocationAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF Repo Canary check expiration task invocation failure
      AlarmDescription: 'TUF Repo Canary check upcoming expiration task could not be invoked'
      Namespace: AWS/Events
      MetricName: FailedInvocations
      Dimensions:
        - Name: RuleName
          Value: !Ref CheckUpcomingExpirationScheduledTask
      Period: 1200
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic
  CheckUpcomingExpirationRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'TUF Repo Canary check-upcoming-expiration task exited with code 73 (found upcoming metadata expirations) or 68 (already expired)'
      Name: !Sub '${TaskName}-upcoming-metadata-expiration'
      EventPattern: !Sub '{"source": ["aws.ecs"],"detail-type": ["ECS Task State Change"],"detail": {"containers": {"name": ["${TaskName}-check-upcoming-expiration"],"exitCode":[73,68],"lastStatus": ["STOPPED"]}}}'
      Targets:
        - Arn: !Join
            - ":"
            - - "arn:aws:logs"
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - 'log-group'
              - !Ref FoundUpcomingExpirationLogGroup
          Id: 'tuf-repo-metadata-upcoming-expiration'
  CheckUpcomingExpirationAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF repository metadata files upcoming expiration
      AlarmDescription: 'TUF Repo Canary found metadata files that are about to expire in 3 days'
      Namespace: AWS/Events
      MetricName: TriggeredRules
      Dimensions:
        - Name: RuleName
          Value: !Ref CheckUpcomingExpirationRule
      Period: 1200
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic

  RetrieveTargetTask:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      TaskRoleArn:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-CanaryTaskExecutionRoleArn"
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub "${CanaryInfraStack}-CanaryTaskExecutionRoleArn"
      Family: !Sub '${TaskName}-retrieve-targets'
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: !Sub '${TaskName}-retrieve-targets'
          Command:
            - '--metadata-base-url'
            - !Sub '${RepoMetadataBaseUrl}'
            - '--target-base-url'
            - !Sub '${RepoTargetBaseUrl}'
            - '--trusted-root-path'
            - '/usr/share/repo-canary/root.json'
            - '--percentage-targets-to-retrieve'
            - '30'
          Memory: 512
          Cpu: 256
          Image: !Join
            - /
            - - !Join
                - .
                - - !Ref 'AWS::AccountId'
                  - dkr.ecr
                  - !Ref 'AWS::Region'
                  - amazonaws.com
              - !Sub '${TaskName}:latest'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref RetrieveTargetsLogGroup
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: 'ecs'
  RetrieveTargetScheduledTask:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: !Sub 'Schedules ${TaskName}-retrieve-targets task to run every 20 minutes starting at minute 10 of the hour'
      ScheduleExpression: cron(10/20 * * * ? *)
      State: ENABLED
      Targets:
        - Id: !Sub '${TaskName}-retrieve-targets-Fargate-Task'
          RoleArn:
            Fn::ImportValue:
              !Sub "${CanaryInfraStack}-CanaryTaskEventRoleArn"
          EcsParameters:
            TaskDefinitionArn: !Ref RetrieveTargetTask
            TaskCount: 1
            LaunchType: FARGATE
            PlatformVersion: LATEST
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - !Ref VPCSecurityGroup
                Subnets:
                  - !Ref VPCSubnet
          Arn:
            Fn::ImportValue:
              !Sub "${CanaryInfraStack}-ECSClusterArn"
  RetrieveTargetFailedInvocationAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF Repo Canary retrieve targets invocation failure
      AlarmDescription: 'TUF Repo Canary retrieve targets task could not be invoked'
      Namespace: AWS/Events
      MetricName: FailedInvocations
      Dimensions:
        - Name: RuleName
          Value: !Ref RetrieveTargetScheduledTask
      Period: 1200
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 3
      DatapointsToAlarm: 2
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic

  ValidationFailedRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'TUF Repo Canary task exited with non-zero exit code'
      Name: !Sub '${TaskName}-non-zero-exit-code'
      EventPattern: !Sub '{"source": ["aws.ecs"],"detail-type": ["ECS Task State Change"],"detail": {"containers": {"name": ["${TaskName}-check-upcoming-expiration","${TaskName}-retrieve-targets"],"exitCode":[1,64,65,66,67,68,69,70,71,72],"lastStatus": ["STOPPED"]}}}'
      Targets:
        - Arn: !Join
            - ":"
            - - "arn:aws:logs"
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - 'log-group'
              - !Ref RepoValidationFailureLogGroup
          Id: 'tuf-repo-validation-failure'
  ValidationFailedAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF repository validation failure
      AlarmDescription: 'TUF Repo Canary failed to validate TUF repository'
      Namespace: AWS/Events
      MetricName: TriggeredRules
      Dimensions:
        - Name: RuleName
          Value: !Ref ValidationFailedRule
      Period: 900
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 4
      DatapointsToAlarm: 3
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic

  TUFRepoCanaryFailedStartAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmName: TUF Repo Canary Task Start Failure
      AlarmDescription: 'TUF Repo Canary task failed to start'
      Namespace: AWS/Events
      MetricName: TriggeredRules
      Dimensions:
        - Name: RuleName
          Value: !Ref TUFRepoCanaryFailedStartRule
      Period: 600
      Statistic: Average
      Threshold: 0
      TreatMissingData: notBreaching
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 4
      DatapointsToAlarm: 3
      ActionsEnabled: true
      AlarmActions:
        - !Ref TUFRepoCanarySNSNotificationTopic
  TUFRepoCanaryFailedStartRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Description: 'TUF Repo Canary fail to start'
      Name: 'repo-canary-failed-to-start'
      EventPattern: !Sub '{"source": ["aws.ecs"],"detail-type": ["ECS Task State Change"],"detail": {"containers": {"name": ["${TaskName}-retrieve-targets","${TaskName}-check-upcoming-expiration"],"lastStatus": ["STOPPED"]},"stoppedReason":["Task failed to start"]}}'
      Targets:
        - Arn: !Join
            - ":"
            - - "arn:aws:logs"
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - 'log-group'
              - !Ref FailedStartLogGroup
          Id: !Sub '${TaskName}-failed-start'
