AWSTemplateFormatVersion: "2010-09-09"
Description: Dogswatch container pipeline
Parameters:
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: develop
    AllowedPattern: "[A-Za-z0-9-]+"
  RepositoryName:
    Description: Repository name
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubOwner:
    Description: Owner of the repository
    Type: String
    Default: amazonlinux
    AllowedPattern: "[A-Za-z0-9-]+"
  GitHubSecretToken:
    Description: Github personal access token. (Account must have permission to create webhooks)
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'
  DogswatchBetaDeployBuildSpecPath:
    Type: String
    AllowedPattern: '.+\.yml$'
    Default: "./tools/infra/buildspec/dogswatch-pipeline-beta-deploy.yml"
    Description: "The path to the host containers beta deploy buildspec."
  DogswatchBuildSpecPath:
    Type: String
    AllowedPattern: '.+\.yml$'
    Default: "./tools/infra/buildspec/dogswatch-pipeline-build.yml"
    Description: "The path to the dogswatch container buildspec."
  DogswatchBuildTestSpecPath:
    Type: String
    AllowedPattern: '.+\.yml$'
    Default: "./tools/infra/buildspec/dogswatch-pipeline-test.yml"
    Description: "The path to the dogswatch container testing buildspec."
  BetaEcrAccountId:
    Type: String
    Description: "Thar's Beta ECR account ID"

Resources:
  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  BuildLogBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  BuildLogGroup:
    Type: AWS::Logs::LogGroup
  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: HostContainerBuildRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # For managing cache, logs, and artifacts in the build's buckets.
              - Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 's3:DeleteObject'
                  - 's3:DeleteObjectVersion'
                Effect: Allow
                Resource:
                  - !GetAtt PipelineArtifactBucket.Arn
                  - Fn::Join:
                      - ""
                      - - !GetAtt PipelineArtifactBucket.Arn
                        - /*
              # For writing to CloudWatch Logs Streams for each build.
              - Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !GetAtt BuildLogGroup.Arn
              # For being able to push to other ECR repositories
              - Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:PutImage'
                Resource: '*'
  DogswatchCtrBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt BuildRole.Arn
      Source:
        BuildSpec: !Ref DogswatchBuildSpecPath
        Type: CODEPIPELINE
      LogsConfig:
        S3Logs:
          Status: ENABLED
          Location:
            Fn::Join:
              - "/"
              - - !GetAtt BuildLogBucket.Arn
                - "codebuild/log"
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref BuildLogGroup
      TimeoutInMinutes: 180

  DogswatchCtrTest:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt BuildRole.Arn
      Source:
        BuildSpec: !Ref DogswatchBuildTestSpecPath
        Type: CODEPIPELINE
      LogsConfig:
        S3Logs:
          Status: ENABLED
          Location:
            Fn::Join:
              - "/"
              - - !GetAtt BuildLogBucket.Arn
                - "codebuild/log"
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref BuildLogGroup
      TimeoutInMinutes: 180

  DogswatchCtrBetaDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: 'ECR_ACCT_ID'
            Type: 'PLAINTEXT'
            Value: !Sub '${BetaEcrAccountId}'
          - Name: 'CONTAINER_IMAGE'
            Type: 'PLAINTEXT'
            Value: 'dogswatch'
      ServiceRole: !GetAtt BuildRole.Arn
      Source:
        BuildSpec: !Ref DogswatchBetaDeployBuildSpecPath
        Type: CODEPIPELINE
      LogsConfig:
        S3Logs:
          Status: ENABLED
          Location:
            Fn::Join:
              - "/"
              - - !GetAtt BuildLogBucket.Arn
                - "codebuild/log"
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref BuildLogGroup
      TimeoutInMinutes: 60

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: HostContainerPipelineRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'ecs:*'
                Resource: '*'

  DogswatchCtrPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: dogswatch-ctr-pipeline
      RoleArn: !GetAtt
        - CodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubSecretToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref DogswatchCtrBuild
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: TestAction
              InputArtifacts:
                - Name: SourceOutput
                - Name: BuildArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DogswatchCtrTest
                PrimarySource: SourceOutput
              RunOrder: 1
        - Name: BetaDeploy
          Actions:
            - Name: BetaDeployAction
              InputArtifacts:
                - Name: SourceOutput
                - Name: BuildArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref DogswatchCtrBetaDeploy
                PrimarySource: SourceOutput
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket

  DogswatchWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubSecretToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
        - JsonPath: "$.head_commit.modified[*]"
          MatchEquals: "extras/dogswatch/Makefile"
      TargetPipeline: !Ref DogswatchCtrPipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt DogswatchCtrPipeline.Version
